plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}



version "0.1"
group "ph.net.see"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://dl.bintray.com/franz-see/maven-repo" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.4'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor "org.projectlombok:lombok:1.18.8"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor 'ph.net.see.io.micronaut.data:micronaut-predator-processor:1.0.0-unofficial-1'
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "javax.annotation:javax.annotation-api"
    compile "io.micronaut:micronaut-http-server-netty"
    compile 'ph.net.see.io.micronaut.data:micronaut-predator-jdbc:1.0.0-unofficial-1'
    compile 'io.micronaut.configuration:micronaut-jdbc-hikari'
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "ph.net.see.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
